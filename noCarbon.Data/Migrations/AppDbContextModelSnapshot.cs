// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using noCarbon.Data.Configurations;

#nullable disable

namespace noCarbon.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("noCarbon.Core.Domain.Actions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("DATETIME");

                    b.Property<ulong>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)");

                    b.Property<int>("Points")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal>("ReducedCarb")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(13, 2)
                        .HasColumnType("decimal(13,2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Actions", (string)null);
                });

            modelBuilder.Entity("noCarbon.Core.Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("DATETIME");

                    b.Property<ulong>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<byte[]>("Icon")
                        .HasColumnType("longblob");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("noCarbon.Core.Domain.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<ulong>("AllowNotification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValueSql("0");

                    b.Property<byte[]>("Avatar")
                        .HasColumnType("longblob");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("DATETIME");

                    b.Property<ulong>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Location")
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("noCarbon.Core.Domain.CustomerRefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("DATETIME");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.ToTable("CustomerRefreshToken", (string)null);
                });

            modelBuilder.Entity("noCarbon.Core.Domain.Events", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("DATETIME");

                    b.Property<ulong>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("longblob");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.ToTable("Events", (string)null);
                });

            modelBuilder.Entity("noCarbon.Core.Domain.Historic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ActionId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("DATETIME");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("OperationDate")
                        .HasColumnType("DATE");

                    b.Property<TimeSpan>("OperationTime")
                        .HasColumnType("TIME");

                    b.Property<int>("Points")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal>("ReducedCarb")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(13, 2)
                        .HasColumnType("decimal(13,2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Historic", (string)null);
                });

            modelBuilder.Entity("noCarbon.Core.Domain.Sponsorship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("DATETIME");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("char(36)");

                    b.Property<ulong>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Sponsorship", (string)null);
                });

            modelBuilder.Entity("noCarbon.Core.Domain.Actions", b =>
                {
                    b.HasOne("noCarbon.Core.Domain.Category", "Category")
                        .WithMany("Actions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("noCarbon.Core.Domain.Historic", b =>
                {
                    b.HasOne("noCarbon.Core.Domain.Actions", "Action")
                        .WithMany("Historics")
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("noCarbon.Core.Domain.Category", "Category")
                        .WithMany("Historics")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("noCarbon.Core.Domain.Customer", "Customer")
                        .WithMany("Historics")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("Category");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("noCarbon.Core.Domain.Sponsorship", b =>
                {
                    b.HasOne("noCarbon.Core.Domain.Customer", "Customer")
                        .WithMany("Sponsorships")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("noCarbon.Core.Domain.Actions", b =>
                {
                    b.Navigation("Historics");
                });

            modelBuilder.Entity("noCarbon.Core.Domain.Category", b =>
                {
                    b.Navigation("Actions");

                    b.Navigation("Historics");
                });

            modelBuilder.Entity("noCarbon.Core.Domain.Customer", b =>
                {
                    b.Navigation("Historics");

                    b.Navigation("Sponsorships");
                });
#pragma warning restore 612, 618
        }
    }
}
